@model GP01NS.Classes.ViewModels.Estabelecimento.ContaVM

@{
    ViewBag.Title = !string.IsNullOrEmpty(Model.Nome) ? Model.Nome : "Meu Estabelecimento";
}

<link href="~/CSS/Views/forms.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="row">
        <div class="col-md-9 col-12 col-lg-9 ml-auto mr-auto form">
            <div class="col-md-7 ml-auto mr-auto">
                @using (Html.BeginForm())
                {
                    <h5 class="text-uppercase">Meu Estabelecimento</h5>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="Nome">Nome do Estabelecimento</label>
                            @Html.TextBoxFor(x => x.Nome, new { @class = "form-control", placeholder = "Nome", required = "required" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="Email">Nome de usuário</label>
                            <div class="input-group md3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">@("@")</span>
                                </div>
                                @Html.TextBoxFor(x => x.Username, new { @class = "form-control", placeholder = "Nome de Usuário", required = "required" })
                            </div>
                        </div>
                        <div class="form-group col">
                            <label for="Email">E-mail</label>
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "E-mail", required = "required", type = "email" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="Razao">Razão Social</label>
                            @Html.TextBoxFor(x => x.Razao, new { @class = "form-control", placeholder = "Razão Social", required = "required" })
                        </div>
                        <div class="form-group col">
                            <label for="CNPJ">CNPJ</label>
                            @if (!string.IsNullOrEmpty(Model.CNPJ))
                            {
                                @Html.TextBoxFor(x => x.CNPJ, new { @class = "form-control cnpj", placeholder = "CNPJ", required = "required", @readonly= "readonly" })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.CNPJ, new { @class = "form-control cnpj", placeholder = "CNPJ", required = "required" })
                            }
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="inputFuncionamento">De</label>
                            @Html.DropDownListFor(x => x.De, Model.GetDias(Model.De), new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col">
                            <label>Até</label>
                            @Html.DropDownListFor(x => x.Ate, Model.GetDias(Model.Ate), new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col">
                            <label>Das</label>
                            @Html.DropDownListFor(x => x.Das, Model.GetHoras(Model.Das), new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col">
                            <label>Às</label>
                            @Html.DropDownListFor(x => x.As, Model.GetHoras(Model.As), new { @class = "form-control", required = "required" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="Ambientacao">Ambientação</label>
                            @Html.DropDownListFor(x => x.IDAmbientacao, Model.GetAmbientacoes(), new { @class = "form-control", required = "required" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label for="Descricao">Descrição</label>
                            @Html.TextAreaFor(x => x.Descricao, new { @class = "form-control", required = "required", placeholder = "Descrição", cols = "", rows = "8", maxlength="1500" })
                        </div>
                    </div>

                    if (!string.IsNullOrEmpty(ViewBag.Erro))
                    {
                        <div class="alert alert-danger">
                            <strong>@ViewBag.Erro</strong>
                        </div>
                    }

                    if (!string.IsNullOrEmpty(ViewBag.Sucesso))
                    {
                        <div class="alert alert-success">
                            <strong>@ViewBag.Sucesso</strong>
                        </div>
                    }

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/form_main.js"></script>
<script src="~/Scripts/Views/Util/viacep-endereco.js"></script>